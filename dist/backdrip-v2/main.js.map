{"version":3,"sources":["./src/app/user/auth.guard.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/services/snack.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { SnackService } from '../services/snack.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private afAuth: AngularFireAuth, private snack: SnackService) {}\n\n  async canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Promise<boolean> {\n    const user = await this.afAuth.currentUser;\n    const isLoggedIn = !!user;\n    if (!isLoggedIn) {\n      this.snack.authError();\n    }\n\n    return isLoggedIn;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  posts: Observable<any[]>;\n\n  constructor(private db: AngularFirestore) {\n    this.posts = db\n      .collection('backdrops', (ref) => ref.orderBy('timeStamp', 'desc'))\n      .valueChanges();\n  }\n\n  like(docID) {\n    var docRef = this.db.collection('backdrops').doc(docID);\n\n    docRef.update({\n      likes: firebase.default.firestore.FieldValue.increment(1),\n    });\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"container\">\n  <div *ngFor=\"let post of posts | async\">\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>\n          {{ post.userName }}\n        </mat-card-title>\n        <mat-card-subtitle>\n          {{ post.title }}\n        </mat-card-subtitle>\n      </mat-card-header>\n      <img mat-card-image [src]=\"post.imgUrl\" alt=\"\" />\n      <mat-card-content>\n        <p>{{ post.description }}</p>\n      </mat-card-content>\n      <mat-card-actions>\n        <button mat-flat-button color=\"accent\" (click)=\"like(post.docId)\">\n          Likes {{ post.likes }}\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyCHX5vQ0R0MgM7lKEwUGHxOzE3vYLqyGno',\n    authDomain: 'backdrip-c5b65.firebaseapp.com',\n    projectId: 'backdrip-c5b65',\n    storageBucket: 'backdrip-c5b65.appspot.com',\n    messagingSenderId: '354717341299',\n    appId: '1:354717341299:web:3740311beaa289c4bdbc06',\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackService {\n  constructor(private snackBar: MatSnackBar, private router: Router) {}\n\n  authError() {\n    this.snackBar.open('You must be logged in to view this page ✌️', 'Log-In', {\n      duration: 5000,\n    });\n\n    return this.snackBar._openedSnackBarRef\n      .onAction()\n      .pipe(\n        tap((_) => {\n          this.router.navigate(['/login']);\n        })\n      )\n      .subscribe();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'backdrip-v2';\n}\n","<app-navbar>\n  <router-outlet></router-outlet>\n</app-navbar>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\n\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFireModule } from '@angular/fire';\nimport { environment } from 'src/environments/environment';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { NavbarComponent } from './navbar/navbar.component';\n\n@NgModule({\n  declarations: [AppComponent, HomeComponent, NavbarComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatSnackBarModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n})\nexport class NavbarComponent {\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe([Breakpoints.Handset])\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    public afAuth: AngularFireAuth\n  ) {}\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav\n    #drawer\n    class=\"sidenav\"\n    fixedInViewport\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n    [opened]=\"false\"\n  >\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"/\" (click)=\"drawer.close()\">Home</a>\n      <a mat-button routerLink=\"/login\">Login</a>\n      <a mat-list-item routerLink=\"/upload\" (click)=\"drawer.close()\"\n        >Create a post</a\n      >\n      <a mat-list-item routerLink=\"/about\" (click)=\"drawer.close()\"\n        >About the creator/project</a\n      >\n    </mat-nav-list>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <mat-toolbar>\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        (click)=\"drawer.toggle()\"\n        mat-icon-button\n        *ngIf=\"isHandset$ | async\"\n      >\n        <mat-icon aria-label=\"side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span class=\"logo\" routerLink=\"/\">This app sux! 💩</span>\n\n      <span class=\"spacer\"></span>\n\n      <div *ngIf=\"!(isHandset$ | async)\">\n        <a mat-button routerLink=\"/\">Home</a>\n        <a mat-button routerLink=\"/login\">Login</a>\n        <a mat-button routerLink=\"/upload\">Create a post</a>\n        <a mat-button routerLink=\"/about\">About the creator/project</a>\n      </div>\n    </mat-toolbar>\n\n    <ng-content> </ng-content>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from './user/auth.guard';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n  {\n    path: 'upload',\n    loadChildren: () =>\n      import('./upload/upload.module').then((m) => m.UploadModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'login',\n    loadChildren: () => import('./user/user.module').then((m) => m.UserModule),\n  },\n  {\n    path: 'about',\n    loadChildren: () =>\n      import('./about/about.module').then((m) => m.AboutModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}